In file included from sums.c:1:
./sums.h:22:11: fatal error: 'windows.h' file not found
        #include <windows.h>
                 ^
1 error generated.
lib/sha512.c:65:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[0] = u64hilo (0x6a09e667, 0xf3bcc908);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:66:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[1] = u64hilo (0xbb67ae85, 0x84caa73b);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:67:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[2] = u64hilo (0x3c6ef372, 0xfe94f82b);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:68:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[3] = u64hilo (0xa54ff53a, 0x5f1d36f1);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:69:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[4] = u64hilo (0x510e527f, 0xade682d1);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:70:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[5] = u64hilo (0x9b05688c, 0x2b3e6c1f);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:71:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[6] = u64hilo (0x1f83d9ab, 0xfb41bd6b);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:72:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[7] = u64hilo (0x5be0cd19, 0x137e2179);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:81:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[0] = u64hilo (0xcbbb9d5d, 0xc1059ed8);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:82:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[1] = u64hilo (0x629a292a, 0x367cd507);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:83:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[2] = u64hilo (0x9159015a, 0x3070dd17);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:84:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[3] = u64hilo (0x152fecd8, 0xf70e5939);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:85:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[4] = u64hilo (0x67332667, 0xffc00b31);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:86:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[5] = u64hilo (0x8eb44a87, 0x68581511);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:87:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[6] = u64hilo (0xdb0c2e0d, 0x64f98fa7);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:88:19: warning: shift count >= width of type [-Wshift-count-overflow]
  ctx->state[7] = u64hilo (0x47b5481d, 0xbefa4fa4);
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:112:47: warning: shift count >= width of type [-Wshift-count-overflow]
    set_uint64 (r + i * sizeof ctx->state[0], SWAP (ctx->state[i]));
                                              ^
lib/sha512.c:37:26: note: expanded from macro 'SWAP'
    u64or (u64or (u64or (u64shl (n, 56),                                \
                         ^
lib/u64.h:39:28: note: expanded from macro 'u64shl'
# define u64shl(x, n) ((x) << (n))
                           ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:112:47: warning: shift count >= width of type [-Wshift-count-overflow]
    set_uint64 (r + i * sizeof ctx->state[0], SWAP (ctx->state[i]));
                                              ^
lib/sha512.c:38:26: note: expanded from macro 'SWAP'
                         u64shl (u64and (n, u64lo (0x0000ff00)), 40)),  \
                         ^
lib/u64.h:39:28: note: expanded from macro 'u64shl'
# define u64shl(x, n) ((x) << (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:112:47: warning: shift count >= width of type [-Wshift-count-overflow]
    set_uint64 (r + i * sizeof ctx->state[0], SWAP (ctx->state[i]));
                                              ^
lib/sha512.c:43:34: note: expanded from macro 'SWAP'
                  u64or (u64and (u64shr (n, 40), u64lo (0x0000ff00)),   \
                                 ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:35:25: note: expanded from macro 'u64and'
# define u64and(x, y) ((x) & (y))
                        ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:112:47: warning: shift count >= width of type [-Wshift-count-overflow]
    set_uint64 (r + i * sizeof ctx->state[0], SWAP (ctx->state[i]));
                                              ^
lib/sha512.c:44:26: note: expanded from macro 'SWAP'
                         u64shr (n, 56))))
                         ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:124:47: warning: shift count >= width of type [-Wshift-count-overflow]
    set_uint64 (r + i * sizeof ctx->state[0], SWAP (ctx->state[i]));
                                              ^
lib/sha512.c:37:26: note: expanded from macro 'SWAP'
    u64or (u64or (u64or (u64shl (n, 56),                                \
                         ^
lib/u64.h:39:28: note: expanded from macro 'u64shl'
# define u64shl(x, n) ((x) << (n))
                           ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:124:47: warning: shift count >= width of type [-Wshift-count-overflow]
    set_uint64 (r + i * sizeof ctx->state[0], SWAP (ctx->state[i]));
                                              ^
lib/sha512.c:38:26: note: expanded from macro 'SWAP'
                         u64shl (u64and (n, u64lo (0x0000ff00)), 40)),  \
                         ^
lib/u64.h:39:28: note: expanded from macro 'u64shl'
# define u64shl(x, n) ((x) << (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:124:47: warning: shift count >= width of type [-Wshift-count-overflow]
    set_uint64 (r + i * sizeof ctx->state[0], SWAP (ctx->state[i]));
                                              ^
lib/sha512.c:43:34: note: expanded from macro 'SWAP'
                  u64or (u64and (u64shr (n, 40), u64lo (0x0000ff00)),   \
                                 ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:35:25: note: expanded from macro 'u64and'
# define u64and(x, y) ((x) & (y))
                        ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:124:47: warning: shift count >= width of type [-Wshift-count-overflow]
    set_uint64 (r + i * sizeof ctx->state[0], SWAP (ctx->state[i]));
                                              ^
lib/sha512.c:44:26: note: expanded from macro 'SWAP'
                         u64shr (n, 56))))
                         ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:148:28: warning: shift count >= width of type [-Wshift-count-overflow]
                           u64shr (ctx->total[0], 61))));
                           ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:37:34: note: expanded from macro 'SWAP'
    u64or (u64or (u64or (u64shl (n, 56),                                \
                                 ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:147:15: warning: shift count >= width of type [-Wshift-count-overflow]
              SWAP (u64or (u64shl (ctx->total[1], 3),
              ^
lib/sha512.c:37:26: note: expanded from macro 'SWAP'
    u64or (u64or (u64or (u64shl (n, 56),                                \
                         ^
lib/u64.h:39:28: note: expanded from macro 'u64shl'
# define u64shl(x, n) ((x) << (n))
                           ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:148:28: warning: shift count >= width of type [-Wshift-count-overflow]
                           u64shr (ctx->total[0], 61))));
                           ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:38:42: note: expanded from macro 'SWAP'
                         u64shl (u64and (n, u64lo (0x0000ff00)), 40)),  \
                                         ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:147:15: warning: shift count >= width of type [-Wshift-count-overflow]
              SWAP (u64or (u64shl (ctx->total[1], 3),
              ^
lib/sha512.c:38:26: note: expanded from macro 'SWAP'
                         u64shl (u64and (n, u64lo (0x0000ff00)), 40)),  \
                         ^
lib/u64.h:39:28: note: expanded from macro 'u64shl'
# define u64shl(x, n) ((x) << (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:148:28: warning: shift count >= width of type [-Wshift-count-overflow]
                           u64shr (ctx->total[0], 61))));
                           ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:39:42: note: expanded from macro 'SWAP'
                  u64or (u64shl (u64and (n, u64lo (0x00ff0000)), 24),   \
                                         ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:148:28: warning: shift count >= width of type [-Wshift-count-overflow]
                           u64shr (ctx->total[0], 61))));
                           ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:40:42: note: expanded from macro 'SWAP'
                         u64shl (u64and (n, u64lo (0xff000000)),  8))), \
                                         ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:148:28: warning: shift count >= width of type [-Wshift-count-overflow]
                           u64shr (ctx->total[0], 61))));
                           ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:41:42: note: expanded from macro 'SWAP'
           u64or (u64or (u64and (u64shr (n,  8), u64lo (0xff000000)),   \
                                         ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:148:28: warning: shift count >= width of type [-Wshift-count-overflow]
                           u64shr (ctx->total[0], 61))));
                           ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:42:42: note: expanded from macro 'SWAP'
                         u64and (u64shr (n, 24), u64lo (0x00ff0000))),  \
                                         ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:148:28: warning: shift count >= width of type [-Wshift-count-overflow]
                           u64shr (ctx->total[0], 61))));
                           ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:43:42: note: expanded from macro 'SWAP'
                  u64or (u64and (u64shr (n, 40), u64lo (0x0000ff00)),   \
                                         ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:147:15: warning: shift count >= width of type [-Wshift-count-overflow]
              SWAP (u64or (u64shl (ctx->total[1], 3),
              ^
lib/sha512.c:43:34: note: expanded from macro 'SWAP'
                  u64or (u64and (u64shr (n, 40), u64lo (0x0000ff00)),   \
                                 ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:35:25: note: expanded from macro 'u64and'
# define u64and(x, y) ((x) & (y))
                        ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:148:28: warning: shift count >= width of type [-Wshift-count-overflow]
                           u64shr (ctx->total[0], 61))));
                           ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:44:34: note: expanded from macro 'SWAP'
                         u64shr (n, 56))))
                                 ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:147:15: warning: shift count >= width of type [-Wshift-count-overflow]
              SWAP (u64or (u64shl (ctx->total[1], 3),
              ^
lib/sha512.c:44:26: note: expanded from macro 'SWAP'
                         u64shr (n, 56))))
                         ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:150:15: warning: shift count >= width of type [-Wshift-count-overflow]
              SWAP (u64shl (ctx->total[0], 3)));
              ^
lib/sha512.c:37:26: note: expanded from macro 'SWAP'
    u64or (u64or (u64or (u64shl (n, 56),                                \
                         ^
lib/u64.h:39:28: note: expanded from macro 'u64shl'
# define u64shl(x, n) ((x) << (n))
                           ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:150:15: warning: shift count >= width of type [-Wshift-count-overflow]
              SWAP (u64shl (ctx->total[0], 3)));
              ^
lib/sha512.c:38:26: note: expanded from macro 'SWAP'
                         u64shl (u64and (n, u64lo (0x0000ff00)), 40)),  \
                         ^
lib/u64.h:39:28: note: expanded from macro 'u64shl'
# define u64shl(x, n) ((x) << (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:150:15: warning: shift count >= width of type [-Wshift-count-overflow]
              SWAP (u64shl (ctx->total[0], 3)));
              ^
lib/sha512.c:43:34: note: expanded from macro 'SWAP'
                  u64or (u64and (u64shr (n, 40), u64lo (0x0000ff00)),   \
                                 ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:35:25: note: expanded from macro 'u64and'
# define u64and(x, y) ((x) & (y))
                        ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:150:15: warning: shift count >= width of type [-Wshift-count-overflow]
              SWAP (u64shl (ctx->total[0], 3)));
              ^
lib/sha512.c:44:26: note: expanded from macro 'SWAP'
                         u64shr (n, 56))))
                         ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:422:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x428a2f98, 0xd728ae22), u64init (0x71374491, 0x23ef65cd),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:422:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x428a2f98, 0xd728ae22), u64init (0x71374491, 0x23ef65cd),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:423:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xb5c0fbcf, 0xec4d3b2f), u64init (0xe9b5dba5, 0x8189dbbc),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:423:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xb5c0fbcf, 0xec4d3b2f), u64init (0xe9b5dba5, 0x8189dbbc),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:424:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x3956c25b, 0xf348b538), u64init (0x59f111f1, 0xb605d019),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:424:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x3956c25b, 0xf348b538), u64init (0x59f111f1, 0xb605d019),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:425:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x923f82a4, 0xaf194f9b), u64init (0xab1c5ed5, 0xda6d8118),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:425:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x923f82a4, 0xaf194f9b), u64init (0xab1c5ed5, 0xda6d8118),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:426:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xd807aa98, 0xa3030242), u64init (0x12835b01, 0x45706fbe),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:426:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xd807aa98, 0xa3030242), u64init (0x12835b01, 0x45706fbe),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:427:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x243185be, 0x4ee4b28c), u64init (0x550c7dc3, 0xd5ffb4e2),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:427:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x243185be, 0x4ee4b28c), u64init (0x550c7dc3, 0xd5ffb4e2),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:428:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x72be5d74, 0xf27b896f), u64init (0x80deb1fe, 0x3b1696b1),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:428:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x72be5d74, 0xf27b896f), u64init (0x80deb1fe, 0x3b1696b1),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:429:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x9bdc06a7, 0x25c71235), u64init (0xc19bf174, 0xcf692694),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:429:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x9bdc06a7, 0x25c71235), u64init (0xc19bf174, 0xcf692694),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:430:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xe49b69c1, 0x9ef14ad2), u64init (0xefbe4786, 0x384f25e3),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:430:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xe49b69c1, 0x9ef14ad2), u64init (0xefbe4786, 0x384f25e3),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:431:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x0fc19dc6, 0x8b8cd5b5), u64init (0x240ca1cc, 0x77ac9c65),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:431:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x0fc19dc6, 0x8b8cd5b5), u64init (0x240ca1cc, 0x77ac9c65),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:432:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x2de92c6f, 0x592b0275), u64init (0x4a7484aa, 0x6ea6e483),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:432:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x2de92c6f, 0x592b0275), u64init (0x4a7484aa, 0x6ea6e483),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:433:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x5cb0a9dc, 0xbd41fbd4), u64init (0x76f988da, 0x831153b5),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:433:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x5cb0a9dc, 0xbd41fbd4), u64init (0x76f988da, 0x831153b5),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:434:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x983e5152, 0xee66dfab), u64init (0xa831c66d, 0x2db43210),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:434:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x983e5152, 0xee66dfab), u64init (0xa831c66d, 0x2db43210),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:435:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xb00327c8, 0x98fb213f), u64init (0xbf597fc7, 0xbeef0ee4),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:435:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xb00327c8, 0x98fb213f), u64init (0xbf597fc7, 0xbeef0ee4),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:436:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xc6e00bf3, 0x3da88fc2), u64init (0xd5a79147, 0x930aa725),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:436:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xc6e00bf3, 0x3da88fc2), u64init (0xd5a79147, 0x930aa725),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:437:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x06ca6351, 0xe003826f), u64init (0x14292967, 0x0a0e6e70),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:437:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x06ca6351, 0xe003826f), u64init (0x14292967, 0x0a0e6e70),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:438:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x27b70a85, 0x46d22ffc), u64init (0x2e1b2138, 0x5c26c926),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:438:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x27b70a85, 0x46d22ffc), u64init (0x2e1b2138, 0x5c26c926),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:439:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x4d2c6dfc, 0x5ac42aed), u64init (0x53380d13, 0x9d95b3df),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:439:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x4d2c6dfc, 0x5ac42aed), u64init (0x53380d13, 0x9d95b3df),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:440:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x650a7354, 0x8baf63de), u64init (0x766a0abb, 0x3c77b2a8),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:440:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x650a7354, 0x8baf63de), u64init (0x766a0abb, 0x3c77b2a8),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:441:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x81c2c92e, 0x47edaee6), u64init (0x92722c85, 0x1482353b),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:441:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x81c2c92e, 0x47edaee6), u64init (0x92722c85, 0x1482353b),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:442:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xa2bfe8a1, 0x4cf10364), u64init (0xa81a664b, 0xbc423001),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:442:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xa2bfe8a1, 0x4cf10364), u64init (0xa81a664b, 0xbc423001),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:443:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xc24b8b70, 0xd0f89791), u64init (0xc76c51a3, 0x0654be30),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:443:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xc24b8b70, 0xd0f89791), u64init (0xc76c51a3, 0x0654be30),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:444:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xd192e819, 0xd6ef5218), u64init (0xd6990624, 0x5565a910),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:444:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xd192e819, 0xd6ef5218), u64init (0xd6990624, 0x5565a910),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:445:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xf40e3585, 0x5771202a), u64init (0x106aa070, 0x32bbd1b8),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:445:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xf40e3585, 0x5771202a), u64init (0x106aa070, 0x32bbd1b8),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:446:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x19a4c116, 0xb8d2d0c8), u64init (0x1e376c08, 0x5141ab53),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:446:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x19a4c116, 0xb8d2d0c8), u64init (0x1e376c08, 0x5141ab53),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:447:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x2748774c, 0xdf8eeb99), u64init (0x34b0bcb5, 0xe19b48a8),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:447:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x2748774c, 0xdf8eeb99), u64init (0x34b0bcb5, 0xe19b48a8),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:448:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x391c0cb3, 0xc5c95a63), u64init (0x4ed8aa4a, 0xe3418acb),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:448:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x391c0cb3, 0xc5c95a63), u64init (0x4ed8aa4a, 0xe3418acb),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:449:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x5b9cca4f, 0x7763e373), u64init (0x682e6ff3, 0xd6b2b8a3),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:449:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x5b9cca4f, 0x7763e373), u64init (0x682e6ff3, 0xd6b2b8a3),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:450:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x748f82ee, 0x5defb2fc), u64init (0x78a5636f, 0x43172f60),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:450:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x748f82ee, 0x5defb2fc), u64init (0x78a5636f, 0x43172f60),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:451:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x84c87814, 0xa1f0ab72), u64init (0x8cc70208, 0x1a6439ec),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:451:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x84c87814, 0xa1f0ab72), u64init (0x8cc70208, 0x1a6439ec),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:452:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x90befffa, 0x23631e28), u64init (0xa4506ceb, 0xde82bde9),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:452:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x90befffa, 0x23631e28), u64init (0xa4506ceb, 0xde82bde9),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:453:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xbef9a3f7, 0xb2c67915), u64init (0xc67178f2, 0xe372532b),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:453:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xbef9a3f7, 0xb2c67915), u64init (0xc67178f2, 0xe372532b),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:454:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xca273ece, 0xea26619c), u64init (0xd186b8c7, 0x21c0c207),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:454:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xca273ece, 0xea26619c), u64init (0xd186b8c7, 0x21c0c207),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:455:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xeada7dd6, 0xcde0eb1e), u64init (0xf57d4f7f, 0xee6ed178),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:455:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0xeada7dd6, 0xcde0eb1e), u64init (0xf57d4f7f, 0xee6ed178),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:456:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x06f067aa, 0x72176fba), u64init (0x0a637dc5, 0xa2c898a6),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:456:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x06f067aa, 0x72176fba), u64init (0x0a637dc5, 0xa2c898a6),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:457:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x113f9804, 0xbef90dae), u64init (0x1b710b35, 0x131c471b),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:457:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x113f9804, 0xbef90dae), u64init (0x1b710b35, 0x131c471b),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:458:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x28db77f5, 0x23047d84), u64init (0x32caab7b, 0x40c72493),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:458:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x28db77f5, 0x23047d84), u64init (0x32caab7b, 0x40c72493),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:459:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x3c9ebe0a, 0x15c9bebc), u64init (0x431d67c4, 0x9c100d4c),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:459:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x3c9ebe0a, 0x15c9bebc), u64init (0x431d67c4, 0x9c100d4c),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:460:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x4cc5d4be, 0xcb3e42b6), u64init (0x597f299c, 0xfc657e2a),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:460:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x4cc5d4be, 0xcb3e42b6), u64init (0x597f299c, 0xfc657e2a),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:461:3: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x5fcb6fab, 0x3ad6faec), u64init (0x6c44198c, 0x4a475817),
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:461:37: warning: shift count >= width of type [-Wshift-count-overflow]
  u64init (0x5fcb6fab, 0x3ad6faec), u64init (0x6c44198c, 0x4a475817),
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/u64.h:32:26: note: expanded from macro 'u64init'
# define u64init(hi, lo) u64hilo (hi, lo)
                         ^~~~~~~~~~~~~~~~
lib/u64.h:31:46: note: expanded from macro 'u64hilo'
# define u64hilo(hi, lo) ((u64) (((u64) (hi) << 32) + (lo)))
                                             ^  ~~
lib/sha512.c:523:18: warning: shift count >= width of type [-Wshift-count-overflow]
          x[t] = SWAP (*words);
                 ^
lib/sha512.c:37:26: note: expanded from macro 'SWAP'
    u64or (u64or (u64or (u64shl (n, 56),                                \
                         ^
lib/u64.h:39:28: note: expanded from macro 'u64shl'
# define u64shl(x, n) ((x) << (n))
                           ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:523:18: warning: shift count >= width of type [-Wshift-count-overflow]
          x[t] = SWAP (*words);
                 ^
lib/sha512.c:38:26: note: expanded from macro 'SWAP'
                         u64shl (u64and (n, u64lo (0x0000ff00)), 40)),  \
                         ^
lib/u64.h:39:28: note: expanded from macro 'u64shl'
# define u64shl(x, n) ((x) << (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/sha512.c:523:18: warning: shift count >= width of type [-Wshift-count-overflow]
          x[t] = SWAP (*words);
                 ^
lib/sha512.c:43:34: note: expanded from macro 'SWAP'
                  u64or (u64and (u64shr (n, 40), u64lo (0x0000ff00)),   \
                                 ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:35:25: note: expanded from macro 'u64and'
# define u64and(x, y) ((x) & (y))
                        ^
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:523:18: warning: shift count >= width of type [-Wshift-count-overflow]
          x[t] = SWAP (*words);
                 ^
lib/sha512.c:44:26: note: expanded from macro 'SWAP'
                         u64shr (n, 56))))
                         ^
lib/u64.h:40:28: note: expanded from macro 'u64shr'
# define u64shr(x, n) ((x) >> (n))
                           ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/u64.h:36:30: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                             ^
lib/sha512.c:527:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K( 0), x[ 0] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:527:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K( 0), x[ 0] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:527:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K( 0), x[ 0] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:527:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K( 0), x[ 0] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:527:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K( 0), x[ 0] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:527:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K( 0), x[ 0] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:528:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K( 1), x[ 1] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:528:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K( 1), x[ 1] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:528:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K( 1), x[ 1] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:528:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K( 1), x[ 1] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:528:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K( 1), x[ 1] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:528:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K( 1), x[ 1] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:529:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K( 2), x[ 2] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:529:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K( 2), x[ 2] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:529:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K( 2), x[ 2] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:529:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K( 2), x[ 2] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:529:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K( 2), x[ 2] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:529:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K( 2), x[ 2] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:530:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K( 3), x[ 3] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:530:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K( 3), x[ 3] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:530:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K( 3), x[ 3] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:530:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K( 3), x[ 3] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:530:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K( 3), x[ 3] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:530:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K( 3), x[ 3] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:531:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K( 4), x[ 4] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:531:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K( 4), x[ 4] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:531:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K( 4), x[ 4] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:531:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K( 4), x[ 4] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:531:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K( 4), x[ 4] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:531:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K( 4), x[ 4] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:532:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K( 5), x[ 5] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:532:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K( 5), x[ 5] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:532:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K( 5), x[ 5] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:532:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K( 5), x[ 5] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:532:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K( 5), x[ 5] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:532:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K( 5), x[ 5] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:533:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K( 6), x[ 6] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:533:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K( 6), x[ 6] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:533:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K( 6), x[ 6] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:533:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K( 6), x[ 6] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:533:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K( 6), x[ 6] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:533:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K( 6), x[ 6] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:534:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K( 7), x[ 7] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:534:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K( 7), x[ 7] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:534:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K( 7), x[ 7] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:534:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K( 7), x[ 7] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:534:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K( 7), x[ 7] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:534:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K( 7), x[ 7] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:535:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K( 8), x[ 8] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:535:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K( 8), x[ 8] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:535:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K( 8), x[ 8] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:535:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K( 8), x[ 8] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:535:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K( 8), x[ 8] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:535:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K( 8), x[ 8] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:536:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K( 9), x[ 9] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:536:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K( 9), x[ 9] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:536:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K( 9), x[ 9] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:536:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K( 9), x[ 9] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:536:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K( 9), x[ 9] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:536:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K( 9), x[ 9] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:537:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(10), x[10] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:537:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(10), x[10] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:537:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(10), x[10] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:537:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(10), x[10] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:537:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(10), x[10] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:537:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(10), x[10] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:538:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(11), x[11] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:538:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(11), x[11] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:538:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(11), x[11] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:538:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(11), x[11] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:538:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(11), x[11] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:538:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(11), x[11] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:539:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(12), x[12] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:539:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(12), x[12] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:539:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(12), x[12] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:539:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(12), x[12] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:539:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(12), x[12] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:539:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(12), x[12] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:540:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(13), x[13] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:540:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(13), x[13] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:540:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(13), x[13] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:540:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(13), x[13] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:540:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(13), x[13] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:540:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(13), x[13] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:541:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(14), x[14] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:541:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(14), x[14] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:541:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(14), x[14] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:541:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(14), x[14] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:541:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(14), x[14] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:541:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(14), x[14] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:542:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(15), x[15] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:542:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(15), x[15] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:542:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(15), x[15] );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:542:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(15), x[15] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:542:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(15), x[15] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:542:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(15), x[15] );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:543:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(16), M(16) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:543:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(16), M(16) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:543:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(16), M(16) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:543:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(16), M(16) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:543:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(16), M(16) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:543:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(16), M(16) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:543:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(16), M(16) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:543:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(16), M(16) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:543:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(16), M(16) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:543:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(16), M(16) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:544:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(17), M(17) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:544:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(17), M(17) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:544:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(17), M(17) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:544:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(17), M(17) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:544:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(17), M(17) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:544:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(17), M(17) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:544:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(17), M(17) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:544:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(17), M(17) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:544:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(17), M(17) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:544:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(17), M(17) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:545:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(18), M(18) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:545:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(18), M(18) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:545:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(18), M(18) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:545:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(18), M(18) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:545:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(18), M(18) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:545:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(18), M(18) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:545:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(18), M(18) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:545:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(18), M(18) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:545:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(18), M(18) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:545:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(18), M(18) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:546:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(19), M(19) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:546:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(19), M(19) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:546:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(19), M(19) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:546:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(19), M(19) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:546:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(19), M(19) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:546:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(19), M(19) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:546:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(19), M(19) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:546:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(19), M(19) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:546:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(19), M(19) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:546:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(19), M(19) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:547:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(20), M(20) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:547:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(20), M(20) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:547:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(20), M(20) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:547:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(20), M(20) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:547:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(20), M(20) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:547:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(20), M(20) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:547:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(20), M(20) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:547:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(20), M(20) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:547:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(20), M(20) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:547:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(20), M(20) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:548:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(21), M(21) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:548:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(21), M(21) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:548:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(21), M(21) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:548:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(21), M(21) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:548:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(21), M(21) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:548:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(21), M(21) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:548:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(21), M(21) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:548:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(21), M(21) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:548:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(21), M(21) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:548:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(21), M(21) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:549:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(22), M(22) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:549:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(22), M(22) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:549:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(22), M(22) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:549:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(22), M(22) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:549:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(22), M(22) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:549:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(22), M(22) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:549:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(22), M(22) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:549:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(22), M(22) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:549:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(22), M(22) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:549:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(22), M(22) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:550:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(23), M(23) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:550:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(23), M(23) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:550:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(23), M(23) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:550:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(23), M(23) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:550:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(23), M(23) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:550:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(23), M(23) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:550:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(23), M(23) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:550:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(23), M(23) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:550:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(23), M(23) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:550:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(23), M(23) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:551:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(24), M(24) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:551:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(24), M(24) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:551:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(24), M(24) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:551:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(24), M(24) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:551:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(24), M(24) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:551:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(24), M(24) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:551:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(24), M(24) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:551:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(24), M(24) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:551:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(24), M(24) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:551:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(24), M(24) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:552:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(25), M(25) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:552:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(25), M(25) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:552:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(25), M(25) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:552:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(25), M(25) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:552:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(25), M(25) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:552:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(25), M(25) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:552:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(25), M(25) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:552:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(25), M(25) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:552:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(25), M(25) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:552:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(25), M(25) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:553:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(26), M(26) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:553:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(26), M(26) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:553:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(26), M(26) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:553:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(26), M(26) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:553:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(26), M(26) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:553:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(26), M(26) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:553:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(26), M(26) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:553:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(26), M(26) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:553:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(26), M(26) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:553:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(26), M(26) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:554:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(27), M(27) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:554:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(27), M(27) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:554:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(27), M(27) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:554:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(27), M(27) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:554:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(27), M(27) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:554:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(27), M(27) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:554:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(27), M(27) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:554:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(27), M(27) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:554:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(27), M(27) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:554:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(27), M(27) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:555:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(28), M(28) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:555:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(28), M(28) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:555:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(28), M(28) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:555:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(28), M(28) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:555:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(28), M(28) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:555:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(28), M(28) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:555:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(28), M(28) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:555:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(28), M(28) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:555:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(28), M(28) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:555:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(28), M(28) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:556:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(29), M(29) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:556:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(29), M(29) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:556:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(29), M(29) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:556:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(29), M(29) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:556:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(29), M(29) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:556:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(29), M(29) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:556:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(29), M(29) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:556:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(29), M(29) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:556:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(29), M(29) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:556:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(29), M(29) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:557:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(30), M(30) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:557:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(30), M(30) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:557:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(30), M(30) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:557:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(30), M(30) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:557:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(30), M(30) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:557:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(30), M(30) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:557:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(30), M(30) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:557:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(30), M(30) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:557:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(30), M(30) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:557:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(30), M(30) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:558:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(31), M(31) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:558:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(31), M(31) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:558:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(31), M(31) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:558:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(31), M(31) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:558:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(31), M(31) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:558:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(31), M(31) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:558:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(31), M(31) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:558:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(31), M(31) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:558:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(31), M(31) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:558:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(31), M(31) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:559:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(32), M(32) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:559:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(32), M(32) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:559:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(32), M(32) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:559:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(32), M(32) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:559:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(32), M(32) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:559:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(32), M(32) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:559:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(32), M(32) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:559:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(32), M(32) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:559:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(32), M(32) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:559:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(32), M(32) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:560:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(33), M(33) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:560:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(33), M(33) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:560:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(33), M(33) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:560:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(33), M(33) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:560:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(33), M(33) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:560:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(33), M(33) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:560:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(33), M(33) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:560:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(33), M(33) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:560:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(33), M(33) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:560:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(33), M(33) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:561:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(34), M(34) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:561:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(34), M(34) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:561:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(34), M(34) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:561:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(34), M(34) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:561:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(34), M(34) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:561:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(34), M(34) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:561:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(34), M(34) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:561:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(34), M(34) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:561:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(34), M(34) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:561:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(34), M(34) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:562:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(35), M(35) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:562:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(35), M(35) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:562:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(35), M(35) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:562:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(35), M(35) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:562:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(35), M(35) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:562:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(35), M(35) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:562:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(35), M(35) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:562:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(35), M(35) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:562:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(35), M(35) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:562:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(35), M(35) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:563:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(36), M(36) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:563:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(36), M(36) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:563:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(36), M(36) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:563:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(36), M(36) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:563:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(36), M(36) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:563:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(36), M(36) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:563:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(36), M(36) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:563:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(36), M(36) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:563:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(36), M(36) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:563:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(36), M(36) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:564:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(37), M(37) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:564:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(37), M(37) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:564:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(37), M(37) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:564:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(37), M(37) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:564:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(37), M(37) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:564:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(37), M(37) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:564:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(37), M(37) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:564:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(37), M(37) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:564:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(37), M(37) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:564:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(37), M(37) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:565:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(38), M(38) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:565:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(38), M(38) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:565:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(38), M(38) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:565:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(38), M(38) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:565:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(38), M(38) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:565:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(38), M(38) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:565:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(38), M(38) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:565:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(38), M(38) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:565:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(38), M(38) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:565:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(38), M(38) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:566:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(39), M(39) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:566:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(39), M(39) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:566:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(39), M(39) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:566:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(39), M(39) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:566:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(39), M(39) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:566:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(39), M(39) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:566:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(39), M(39) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:566:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(39), M(39) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:566:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(39), M(39) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:566:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(39), M(39) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:567:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(40), M(40) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:567:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(40), M(40) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:567:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(40), M(40) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:567:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(40), M(40) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:567:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(40), M(40) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:567:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(40), M(40) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:567:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(40), M(40) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:567:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(40), M(40) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:567:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(40), M(40) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:567:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(40), M(40) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:568:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(41), M(41) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:568:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(41), M(41) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:568:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(41), M(41) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:568:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(41), M(41) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:568:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(41), M(41) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:568:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(41), M(41) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:568:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(41), M(41) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:568:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(41), M(41) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:568:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(41), M(41) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:568:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(41), M(41) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:569:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(42), M(42) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:569:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(42), M(42) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:569:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(42), M(42) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:569:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(42), M(42) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:569:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(42), M(42) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:569:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(42), M(42) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:569:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(42), M(42) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:569:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(42), M(42) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:569:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(42), M(42) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:569:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(42), M(42) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:570:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(43), M(43) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:570:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(43), M(43) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:570:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(43), M(43) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:570:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(43), M(43) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:570:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(43), M(43) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:570:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(43), M(43) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:570:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(43), M(43) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:570:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(43), M(43) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:570:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(43), M(43) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:570:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(43), M(43) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:571:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(44), M(44) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:571:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(44), M(44) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:571:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(44), M(44) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:571:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(44), M(44) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:571:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(44), M(44) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:571:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(44), M(44) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:571:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(44), M(44) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:571:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(44), M(44) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:571:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(44), M(44) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:571:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(44), M(44) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:572:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(45), M(45) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:572:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(45), M(45) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:572:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(45), M(45) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:572:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(45), M(45) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:572:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(45), M(45) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:572:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(45), M(45) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:572:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(45), M(45) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:572:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(45), M(45) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:572:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(45), M(45) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:572:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(45), M(45) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:573:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(46), M(46) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:573:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(46), M(46) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:573:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(46), M(46) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:573:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(46), M(46) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:573:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(46), M(46) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:573:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(46), M(46) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:573:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(46), M(46) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:573:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(46), M(46) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:573:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(46), M(46) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:573:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(46), M(46) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:574:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(47), M(47) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:574:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(47), M(47) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:574:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(47), M(47) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:574:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(47), M(47) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:574:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(47), M(47) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:574:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(47), M(47) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:574:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(47), M(47) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:574:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(47), M(47) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:574:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(47), M(47) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:574:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(47), M(47) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:575:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(48), M(48) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:575:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(48), M(48) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:575:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(48), M(48) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:575:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(48), M(48) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:575:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(48), M(48) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:575:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(48), M(48) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:575:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(48), M(48) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:575:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(48), M(48) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:575:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(48), M(48) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:575:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(48), M(48) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:576:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(49), M(49) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:576:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(49), M(49) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:576:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(49), M(49) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:576:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(49), M(49) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:576:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(49), M(49) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:576:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(49), M(49) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:576:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(49), M(49) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:576:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(49), M(49) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:576:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(49), M(49) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:576:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(49), M(49) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:577:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(50), M(50) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:577:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(50), M(50) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:577:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(50), M(50) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:577:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(50), M(50) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:577:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(50), M(50) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:577:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(50), M(50) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:577:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(50), M(50) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:577:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(50), M(50) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:577:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(50), M(50) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:577:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(50), M(50) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:578:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(51), M(51) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:578:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(51), M(51) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:578:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(51), M(51) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:578:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(51), M(51) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:578:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(51), M(51) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:578:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(51), M(51) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:578:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(51), M(51) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:578:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(51), M(51) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:578:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(51), M(51) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:578:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(51), M(51) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:579:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(52), M(52) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:579:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(52), M(52) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:579:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(52), M(52) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:579:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(52), M(52) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:579:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(52), M(52) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:579:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(52), M(52) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:579:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(52), M(52) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:579:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(52), M(52) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:579:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(52), M(52) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:579:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(52), M(52) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:580:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(53), M(53) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:580:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(53), M(53) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:580:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(53), M(53) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:580:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(53), M(53) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:580:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(53), M(53) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:580:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(53), M(53) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:580:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(53), M(53) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:580:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(53), M(53) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:580:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(53), M(53) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:580:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(53), M(53) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:581:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(54), M(54) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:581:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(54), M(54) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:581:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(54), M(54) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:581:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(54), M(54) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:581:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(54), M(54) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:581:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(54), M(54) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:581:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(54), M(54) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:581:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(54), M(54) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:581:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(54), M(54) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:581:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(54), M(54) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:582:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(55), M(55) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:582:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(55), M(55) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:582:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(55), M(55) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:582:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(55), M(55) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:582:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(55), M(55) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:582:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(55), M(55) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:582:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(55), M(55) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:582:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(55), M(55) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:582:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(55), M(55) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:582:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(55), M(55) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:583:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(56), M(56) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:583:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(56), M(56) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:583:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(56), M(56) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:583:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(56), M(56) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:583:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(56), M(56) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:583:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(56), M(56) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:583:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(56), M(56) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:583:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(56), M(56) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:583:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(56), M(56) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:583:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(56), M(56) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:584:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(57), M(57) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:584:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(57), M(57) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:584:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(57), M(57) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:584:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(57), M(57) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:584:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(57), M(57) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:584:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(57), M(57) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:584:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(57), M(57) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:584:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(57), M(57) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:584:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(57), M(57) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:584:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(57), M(57) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:585:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(58), M(58) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:585:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(58), M(58) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:585:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(58), M(58) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:585:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(58), M(58) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:585:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(58), M(58) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:585:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(58), M(58) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:585:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(58), M(58) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:585:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(58), M(58) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:585:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(58), M(58) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:585:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(58), M(58) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:586:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(59), M(59) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:586:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(59), M(59) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:586:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(59), M(59) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:586:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(59), M(59) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:586:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(59), M(59) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:586:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(59), M(59) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:586:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(59), M(59) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:586:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(59), M(59) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:586:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(59), M(59) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:586:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(59), M(59) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:587:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(60), M(60) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:587:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(60), M(60) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:587:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(60), M(60) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:587:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(60), M(60) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:587:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(60), M(60) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:587:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(60), M(60) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:587:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(60), M(60) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:587:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(60), M(60) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:587:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(60), M(60) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:587:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(60), M(60) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:588:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(61), M(61) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:588:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(61), M(61) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:588:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(61), M(61) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:588:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(61), M(61) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:588:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(61), M(61) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:588:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(61), M(61) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:588:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(61), M(61) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:588:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(61), M(61) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:588:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(61), M(61) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:588:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(61), M(61) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:589:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(62), M(62) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:589:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(62), M(62) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:589:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(62), M(62) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:589:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(62), M(62) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:589:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(62), M(62) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:589:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(62), M(62) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:589:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(62), M(62) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:589:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(62), M(62) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:589:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(62), M(62) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:589:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(62), M(62) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:590:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(63), M(63) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:590:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(63), M(63) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:590:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(63), M(63) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:590:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(63), M(63) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:590:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(63), M(63) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:590:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(63), M(63) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:590:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(63), M(63) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:590:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(63), M(63) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:590:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(63), M(63) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:590:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(63), M(63) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:591:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(64), M(64) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:591:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(64), M(64) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:591:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(64), M(64) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:591:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(64), M(64) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:591:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(64), M(64) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:591:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(64), M(64) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:591:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(64), M(64) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:591:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(64), M(64) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:591:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(64), M(64) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:591:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(64), M(64) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:592:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(65), M(65) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:592:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(65), M(65) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:592:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(65), M(65) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:592:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(65), M(65) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:592:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(65), M(65) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:592:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(65), M(65) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:592:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(65), M(65) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:592:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(65), M(65) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:592:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(65), M(65) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:592:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(65), M(65) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:593:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(66), M(66) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:593:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(66), M(66) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:593:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(66), M(66) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:593:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(66), M(66) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:593:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(66), M(66) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:593:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(66), M(66) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:593:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(66), M(66) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:593:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(66), M(66) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:593:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(66), M(66) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:593:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(66), M(66) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:594:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(67), M(67) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:594:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(67), M(67) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:594:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(67), M(67) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:594:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(67), M(67) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:594:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(67), M(67) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:594:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(67), M(67) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:594:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(67), M(67) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:594:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(67), M(67) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:594:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(67), M(67) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:594:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(67), M(67) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:595:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(68), M(68) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:595:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(68), M(68) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:595:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(68), M(68) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:595:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(68), M(68) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:595:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(68), M(68) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:595:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(68), M(68) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:595:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(68), M(68) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:595:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(68), M(68) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:595:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(68), M(68) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:595:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(68), M(68) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:596:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(69), M(69) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:596:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(69), M(69) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:596:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(69), M(69) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:596:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(69), M(69) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:596:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(69), M(69) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:596:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(69), M(69) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:596:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(69), M(69) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:596:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(69), M(69) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:596:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(69), M(69) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:596:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(69), M(69) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:597:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(70), M(70) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:597:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(70), M(70) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:597:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(70), M(70) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:597:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(70), M(70) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:597:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(70), M(70) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:597:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(70), M(70) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:597:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(70), M(70) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:597:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(70), M(70) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:597:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(70), M(70) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:597:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(70), M(70) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:598:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(71), M(71) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:598:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(71), M(71) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:598:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(71), M(71) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:598:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(71), M(71) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:598:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(71), M(71) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:598:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(71), M(71) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:598:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(71), M(71) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:598:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(71), M(71) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:598:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(71), M(71) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:598:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(71), M(71) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:599:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(72), M(72) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:599:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(72), M(72) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:599:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(72), M(72) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:599:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(72), M(72) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:599:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(72), M(72) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:599:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(72), M(72) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:599:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(72), M(72) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:599:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(72), M(72) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:599:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(72), M(72) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:599:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( a, b, c, d, e, f, g, h, K(72), M(72) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:600:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(73), M(73) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:600:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(73), M(73) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:600:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(73), M(73) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:600:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(73), M(73) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:600:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(73), M(73) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:600:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(73), M(73) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:600:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(73), M(73) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:600:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(73), M(73) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:600:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(73), M(73) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:600:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( h, a, b, c, d, e, f, g, K(73), M(73) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:601:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(74), M(74) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:601:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(74), M(74) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:601:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(74), M(74) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:601:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(74), M(74) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:601:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(74), M(74) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:601:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(74), M(74) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:601:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(74), M(74) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:601:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(74), M(74) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:601:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(74), M(74) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:601:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( g, h, a, b, c, d, e, f, K(74), M(74) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:602:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(75), M(75) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:602:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(75), M(75) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:602:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(75), M(75) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:602:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(75), M(75) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:602:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(75), M(75) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:602:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(75), M(75) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:602:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(75), M(75) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:602:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(75), M(75) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:602:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(75), M(75) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:602:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( f, g, h, a, b, c, d, e, K(75), M(75) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:603:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(76), M(76) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:603:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(76), M(76) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:603:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(76), M(76) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:603:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(76), M(76) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:603:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(76), M(76) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:603:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(76), M(76) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:603:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(76), M(76) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:603:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(76), M(76) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:603:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(76), M(76) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:603:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( e, f, g, h, a, b, c, d, K(76), M(76) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:604:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(77), M(77) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:604:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(77), M(77) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:604:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(77), M(77) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:604:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(77), M(77) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:604:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(77), M(77) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:604:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(77), M(77) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:604:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(77), M(77) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:604:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(77), M(77) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:604:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(77), M(77) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:604:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( d, e, f, g, h, a, b, c, K(77), M(77) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:605:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(78), M(78) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:605:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(78), M(78) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:605:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(78), M(78) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:605:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(78), M(78) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:605:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(78), M(78) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:605:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(78), M(78) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:605:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(78), M(78) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:605:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(78), M(78) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:605:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(78), M(78) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:605:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( c, d, e, f, g, h, a, b, K(78), M(78) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:606:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(79), M(79) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:24: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:36:24: note: expanded from macro 'u64or'
# define u64or(x, y) ((x) | (y))
                       ^
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:606:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(79), M(79) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:48: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:606:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(79), M(79) );
      ^
lib/sha512.c:508:25: note: expanded from macro 'R'
      u64 t0 = u64plus (SS0 (A), F2 (A, B, C));                           \
                        ^
lib/sha512.c:496:64: note: expanded from macro 'SS0'
#define SS0(x) u64xor (u64rol (x, 36), u64xor (u64rol (x, 30), u64rol (x, 25)))
                                                               ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/sha512.c:606:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(79), M(79) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:24: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                       ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:25: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                        ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:606:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(79), M(79) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:47: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                              ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:606:7: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(79), M(79) );
      ^
lib/sha512.c:510:30: note: expanded from macro 'R'
        u64plus (H, u64plus (SS1 (E),                                     \
                             ^
lib/sha512.c:497:63: note: expanded from macro 'SS1'
#define SS1(x) u64xor (u64rol(x, 50), u64xor (u64rol (x, 46), u64rol (x, 23)))
                                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 3 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:37:31: note: expanded from macro 'u64xor'
# define u64xor(x, y) ((x) ^ (y))
                              ^
lib/u64.h:38:26: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                         ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:606:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(79), M(79) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:23: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 7 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:606:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(79), M(79) );
                                        ^
lib/sha512.c:501:35: note: expanded from macro 'M'
                         u64plus (S1 (x[((I) - 2) & 15]),                 \
                                  ^
lib/sha512.c:495:47: note: expanded from macro 'S1'
#define S1(x) u64xor (u64rol (x, 45), u64xor (u64rol (x, 3), u64shr (x, 6)))
                                              ^
lib/u64.h:24:44: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                                           ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:606:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(79), M(79) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:23: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                      ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 8 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/sha512.c:606:41: warning: shift count >= width of type [-Wshift-count-overflow]
      R( b, c, d, e, f, g, h, a, K(79), M(79) );
                                        ^
lib/sha512.c:503:44: note: expanded from macro 'M'
                                           S0 (x[((I) - 15) & 15])))))
                                           ^
lib/sha512.c:494:46: note: expanded from macro 'S0'
#define S0(x) u64xor (u64rol(x, 63), u64xor (u64rol (x, 56), u64shr (x, 7)))
                                             ^
lib/u64.h:24:29: note: expanded from macro 'u64rol'
#define u64rol(x, n) u64or (u64shl (x, n), u64shr (x, 64 - n))
                            ^
note: (skipping 9 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
lib/u64.h:38:32: note: expanded from macro 'u64plus'
# define u64plus(x, y) ((x) + (y))
                               ^
860 warnings generated.
